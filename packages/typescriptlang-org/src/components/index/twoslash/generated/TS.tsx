// Auto-generated by the twoslash-cli from TS.ts.md
import React from "react"

const innerHTML = `
<pre class="shiki min-light twoslash lsp" style="background-color: #ffffff; color: #24292eff"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #D32F2F">function</span><span style="color: #24292EFF"> </span><span style="color: #6F42C1"><data-lsp lsp='function compact(arr: string[]): string[]' >compact</data-lsp></span><span style="color: #24292EFF">(<data-lsp lsp='(parameter) arr: string[]' >arr</data-lsp></span><span style="color: #D32F2F">:</span><span style="color: #24292EFF"> </span><span style="color: #1976D2">string</span><span style="color: #24292EFF">[]) {</span></div><div class='line'><span style="color: #24292EFF">  </span><span style="color: #D32F2F">if</span><span style="color: #24292EFF"> (</span><span style="color: #1976D2"><data-lsp lsp='(parameter) arr: string[]' >arr</data-lsp></span><span style="color: #24292EFF">.</span><span style="color: #1976D2"><data-lsp lsp='(property) Array&lt;string>.length: number' >length</data-lsp></span><span style="color: #24292EFF"> </span><span style="color: #D32F2F">&gt;</span><span style="color: #24292EFF"> </span><span style="color: #1976D2">10</span><span style="color: #24292EFF">) </span><span style="color: #D32F2F">return</span><span style="color: #24292EFF"> </span><span style="color: #1976D2"><data-lsp lsp='(parameter) arr: string[]' >arr</data-lsp></span><span style="color: #6F42C1">.<data-lsp lsp='(method) Array&lt;string>.slice(start?: number | undefined, end?: number | undefined): string[]' >slice</data-lsp></span><span style="color: #24292EFF">(</span><span style="color: #1976D2">0</span><span style="color: #24292EFF">, </span><span style="color: #1976D2">10</span><span style="color: #24292EFF">)</span></div><div class='line'><span style="color: #24292EFF">  </span><span style="color: #D32F2F">return</span><span style="color: #24292EFF"> <data-lsp lsp='(parameter) arr: string[]' >arr</data-lsp></span></div><div class='line'><span style="color: #24292EFF">}</span></div><div class='line'>&nbsp;</div></code></div></pre>
<pre class="shiki typescript-beta-dark twoslash lsp" style="background-color: #00273f; color: #D4D4D4"><div class="language-id">ts</div><div class='code-container'><code><div class='line'><span style="color: #569CD6">function</span><span style="color: #D4D4D4"> <data-lsp lsp='function compact(arr: string[]): string[]' >compact</data-lsp>(<data-lsp lsp='(parameter) arr: string[]' >arr</data-lsp>: string[]) {</span></div><div class='line'><span style="color: #D4D4D4">  </span><span style="color: #569CD6">if</span><span style="color: #D4D4D4"> (<data-lsp lsp='(parameter) arr: string[]' >arr</data-lsp>.<data-lsp lsp='(property) Array&lt;string>.length: number' >length</data-lsp> > </span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">) </span><span style="color: #569CD6">return</span><span style="color: #D4D4D4"> <data-lsp lsp='(parameter) arr: string[]' >arr</data-lsp>.<data-lsp lsp='(method) Array&lt;string>.slice(start?: number | undefined, end?: number | undefined): string[]' >slice</data-lsp>(</span><span style="color: #B5CEA8">0</span><span style="color: #D4D4D4">, </span><span style="color: #B5CEA8">10</span><span style="color: #D4D4D4">)</span></div><div class='line'><span style="color: #D4D4D4">  </span><span style="color: #569CD6">return</span><span style="color: #D4D4D4"> <data-lsp lsp='(parameter) arr: string[]' >arr</data-lsp></span></div><div class='line'><span style="color: #D4D4D4">}</span></div><div class='line'>&nbsp;</div></code></div></pre>
`

export const Code = () => <div dangerouslySetInnerHTML={{ __html: innerHTML }} />
